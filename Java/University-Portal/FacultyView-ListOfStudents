/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package university;

import javax.swing.JFrame;
import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import java.text.DateFormat;
import java.text.MessageFormat;
import java.text.SimpleDateFormat;
import java.util.Vector;

/**
 *
 * @author Revy
 */
public class ShowStudents extends javax.swing.JFrame {

    private static final String username = "root";
    private static final String password = "Killerevy021";
    private static final String dataConn = "jdbc:mysql://localhost:3306/universitydb";
    
    Connection sqlConn = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    int q, i, id, deleteItem;
    
    public ShowStudents() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
     //==========================================FUNCTION=====================================================
    public void upDateDB()
    {
        try {
    // Establishing database connection
    Class.forName("com.mysql.jdbc.Driver");
    sqlConn = DriverManager.getConnection(dataConn, username, password);
    // Preparing SQL statement to select all columns from 'students' table
    pst = sqlConn.prepareStatement("select students from universitydb");
    
    // Executing the query and obtaining the result set
    rs = pst.executeQuery();
    ResultSetMetaData stData = rs.getMetaData(); // Retrieving metadata about the result set
    
    q = stData.getColumnCount(); // Getting the number of columns
    
    // Accessing the table model and resetting its row count
    DefaultTableModel RecordTable = (DefaultTableModel) jTable1.getModel();
    RecordTable.setRowCount(0);
    
    // Looping through the result set
    while (rs.next()) {
        Vector columnData = new Vector(); // Creating a vector to hold column data
        
        // Iterating through each column
        for (i = 1; i <= q; i++) {
            // Adding specific columns from the result set to the vector
            columnData.add(rs.getString("id"));
            columnData.add(rs.getString("StudentID"));
            columnData.add(rs.getString("Name"));
            columnData.add(rs.getString("Surname"));
            columnData.add(rs.getString("IDNo"));
            columnData.add(rs.getString("CellNo"));
            columnData.add(rs.getString("Gender"));
            columnData.add(rs.getString("Year"));
            columnData.add(rs.getString("Course"));
            columnData.add(rs.getString("Email"));
            columnData.add(rs.getString("Username"));
            columnData.add(rs.getString("Password"));
        }
        
        // Adding the column data vector to the table model as a new row
        RecordTable.addRow(columnData);
    }
} catch (Exception ex) {
    // Handling exceptions, displaying an error message dialog
    JOptionPane.showMessageDialog(null, ex);
}

    }
    
    
     //==========================================FUNCTION=====================================================
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        btnBack = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jtxtID = new javax.swing.JTextField();
        jtxtName = new javax.swing.JTextField();
        jtxtSurname = new javax.swing.JTextField();
        jtxtCell = new javax.swing.JTextField();
        jtxtPass = new javax.swing.JTextField();
        jtxtCourse = new javax.swing.JTextField();
        jtxtUser = new javax.swing.JTextField();
        jtxtYear = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jtxtEmail = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jtxtStuID = new javax.swing.JTextField();
        jtxtGender = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        btnUpdate = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Students List");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Perpetua", 3, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Students Lists");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(648, 6, -1, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "StudentID", "Name", "Surname", "IDNo", "CellNo", "Gender", "Year", "Course", "Email", "Username", "Password"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(402, 68, 686, 152));

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Display");
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 240, 87, 36));

        btnDelete.setBackground(new java.awt.Color(0, 0, 0));
        btnDelete.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("Delete");
        btnDelete.setPreferredSize(new java.awt.Dimension(62, 32));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        getContentPane().add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 370, 87, -1));
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 370, 85, -1));

        jLabel2.setFont(new java.awt.Font("Berlin Sans FB", 2, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("To delete you enter the StudentID:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 330, 212, -1));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(402, 286, 686, 11));

        btnBack.setBackground(new java.awt.Color(0, 0, 0));
        btnBack.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("BACK");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        getContentPane().add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 350, 81, 38));

        jLabel3.setBackground(new java.awt.Color(0, 0, 0));
        jLabel3.setFont(new java.awt.Font("Franklin Gothic Medium", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Add & Update Students");
        jLabel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 6, -1, -1));

        jtxtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtIDActionPerformed(evt);
            }
        });
        getContentPane().add(jtxtID, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 140, 119, -1));
        getContentPane().add(jtxtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 80, 119, -1));
        getContentPane().add(jtxtSurname, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 110, 119, -1));
        getContentPane().add(jtxtCell, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 170, 119, -1));
        getContentPane().add(jtxtPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 350, 119, -1));
        getContentPane().add(jtxtCourse, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 260, 119, -1));
        getContentPane().add(jtxtUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 320, 119, -1));
        getContentPane().add(jtxtYear, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 200, 119, -1));

        jLabel4.setFont(new java.awt.Font("Myanmar Text", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Name:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, -1, -1));

        jLabel5.setFont(new java.awt.Font("Myanmar Text", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Surname:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 73, -1));

        jLabel12.setFont(new java.awt.Font("Myanmar Text", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Email:");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 290, 84, -1));

        jLabel6.setFont(new java.awt.Font("Myanmar Text", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("ID No:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 48, -1));

        jLabel7.setFont(new java.awt.Font("Myanmar Text", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Cell No:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, -1, -1));
        getContentPane().add(jtxtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 290, 119, -1));

        jLabel8.setFont(new java.awt.Font("Myanmar Text", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Year:");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, 41, -1));

        jLabel9.setFont(new java.awt.Font("Myanmar Text", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Course:");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 260, 73, -1));

        jLabel10.setFont(new java.awt.Font("Myanmar Text", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Gender:");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, 73, -1));

        jLabel11.setFont(new java.awt.Font("Myanmar Text", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("UserName:");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 320, 84, -1));

        jLabel13.setFont(new java.awt.Font("Myanmar Text", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Password:");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 350, 76, -1));

        jLabel14.setFont(new java.awt.Font("Myanmar Text", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("StudentID:");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 47, -1, -1));
        getContentPane().add(jtxtStuID, new org.netbeans.lib.awtextra.AbsoluteConstraints(198, 44, 119, -1));
        getContentPane().add(jtxtGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 230, 119, -1));

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnUpdate.setBackground(new java.awt.Color(255, 255, 255));
        btnUpdate.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(0, 0, 0));
        btnUpdate.setText("UPDATE");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        jPanel1.add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(195, 398, 90, 30));

        btnAdd.setBackground(new java.awt.Color(255, 255, 255));
        btnAdd.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(0, 0, 0));
        btnAdd.setText("ADD");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        jPanel1.add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 400, 70, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 390, 430));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 700, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 430, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 0, 700, 430));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>                        

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
        FacultyMenu facultyMenuPage = new FacultyMenu(); // Instantiate StudentProfile page
        facultyMenuPage.setVisible(true); // Display the StudentProfile page
    }                                       

    private void jtxtIDActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:
    }                                      

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:
        try {
    // Establishing database connection
    Class.forName("com.mysql.jdbc.Driver");
    sqlConn = DriverManager.getConnection(dataConn, username, password);
    
    // Preparing SQL statement for inserting data into the 'students' table
    pst = sqlConn.prepareStatement("INSERT INTO universitydb.students (StudentID, Name, Surname, "
            + "IDNo, CellNo, Gender, Year, Course, Email, Username, Password) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
    
    // Setting values for each parameter in the prepared statement
    pst.setString(1, jtxtStuID.getText());
    pst.setString(2, jtxtName.getText());
    pst.setString(3, jtxtSurname.getText());
    pst.setString(4, jtxtID.getText());
    pst.setString(5, jtxtCell.getText());
    pst.setString(6, jtxtGender.getText());
    pst.setString(7, jtxtYear.getText());
    pst.setString(8, jtxtCourse.getText());
    pst.setString(9, jtxtEmail.getText());
    pst.setString(10, jtxtUser.getText());
    pst.setString(11, jtxtPass.getText());
    
    // Executing the update query to insert the data into the database
    pst.executeUpdate();
    
    // Displaying a success message
    JOptionPane.showMessageDialog(this, "Record Added");
    
    // Updating the database - possibly a method to refresh the view or perform additional actions
    upDateDB();
} catch (ClassNotFoundException ex) {
    // Handling ClassNotFoundException by logging the error
    java.util.logging.Logger.getLogger(ShowStudents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
} catch (SQLException ex) {
    // Handling SQLException by logging the error
    java.util.logging.Logger.getLogger(ShowStudents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
}
    }                                      

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
          try {
    // Establishing database connection
    Class.forName("com.mysql.jdbc.Driver");
    sqlConn = DriverManager.getConnection(dataConn, username, password);
    
    // Preparing SQL statement for updating data in the 'students' table
    pst = sqlConn.prepareStatement("UPDATE universitydb.students SET StudentID=?, Name=?, Surname=?, "
            + "IDNo=?, CellNo=?, Gender=?, Year=?, Course=?, Email=?, Username=?, Password=? WHERE id=?");
    
    // Setting values for each parameter in the prepared statement
    pst.setString(1, jtxtStuID.getText());
    pst.setString(2, jtxtName.getText());
    pst.setString(3, jtxtSurname.getText());
    pst.setString(4, jtxtID.getText());
    pst.setString(5, jtxtCell.getText());
    pst.setString(6, jtxtGender.getText());
    pst.setString(7, jtxtYear.getText());
    pst.setString(8, jtxtCourse.getText());
    pst.setString(9, jtxtEmail.getText());
    pst.setString(10, jtxtUser.getText());
    pst.setString(11, jtxtPass.getText());
    
    // Executing the update query to modify data in the database
    pst.executeUpdate();
    
    // Displaying a success message
    JOptionPane.showMessageDialog(this, "Record Updated");
    
    // Updating the database - possibly a method to refresh the view or perform additional actions
    upDateDB();
} catch (ClassNotFoundException ex) {
    // Handling ClassNotFoundException by logging the error
    java.util.logging.Logger.getLogger(ShowStudents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
} catch (SQLException ex) {
    // Handling SQLException by logging the error
    java.util.logging.Logger.getLogger(ShowStudents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
}

    }                                         

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {                                     
        // TODO add your handling code here:
           // Getting the table model associated with jTable1
DefaultTableModel RecordTable = (DefaultTableModel) jTable1.getModel();

// Getting the index of the selected row in the table
int SelectedRows = jTable1.getSelectedRow();

// Setting text fields with data from the selected row of the table model
jtxtStuID.setText(RecordTable.getValueAt(SelectedRows, 1).toString());
jtxtName.setText(RecordTable.getValueAt(SelectedRows, 2).toString());
jtxtSurname.setText(RecordTable.getValueAt(SelectedRows, 3).toString());
jtxtID.setText(RecordTable.getValueAt(SelectedRows, 4).toString());
jtxtCell.setText(RecordTable.getValueAt(SelectedRows, 5).toString());
jtxtYear.setText(RecordTable.getValueAt(SelectedRows, 6).toString());
jtxtGender.setText(RecordTable.getValueAt(SelectedRows, 7).toString());
jtxtCourse.setText(RecordTable.getValueAt(SelectedRows, 8).toString());
jtxtEmail.setText(RecordTable.getValueAt(SelectedRows, 9).toString());
jtxtUser.setText(RecordTable.getValueAt(SelectedRows, 10).toString());
jtxtPass.setText(RecordTable.getValueAt(SelectedRows, 11).toString());

            
    }                                    

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
        // Getting the table model associated with jTable1
DefaultTableModel RecordTable = (DefaultTableModel) jTable1.getModel();

// Getting the index of the selected row in the table
int SelectedRows = jTable1.getSelectedRow();

try {
    // Parsing the ID from the first column of the selected row
    id = Integer.parseInt(RecordTable.getValueAt(SelectedRows, 0).toString());
    
    // Displaying a confirmation dialog for deleting the item
    deleteItem = JOptionPane.showConfirmDialog(null, "Confirm if want to delete item", "Warning", JOptionPane.YES_NO_CANCEL_OPTION);
    
    if (deleteItem == JOptionPane.YES_OPTION) {
        // Establishing database connection
        Class.forName("com.mysql.jdbc.Driver");
        sqlConn = DriverManager.getConnection(dataConn, username, password);
        
        // Preparing SQL statement for deleting a record from the 'students' table
        pst = sqlConn.prepareStatement("DELETE FROM universitydb.students WHERE id = ?");
        
        // Setting the ID value as a parameter in the prepared statement
        pst.setInt(1, id);
        
        // Executing the delete query
        pst.executeUpdate();
        
        // Displaying a success message
        JOptionPane.showMessageDialog(this, "Record Updated");
        
        // Updating the database - possibly a method to refresh the view or perform additional actions
        upDateDB();
        
        // Clearing the text fields after successful deletion
        jtxtStuID.setText("");
        jtxtStuID.requestFocus();
        jtxtName.setText("");
        jtxtSurname.setText("");
        jtxtID.setText("");
        jtxtCell.setText("");
        jtxtGender.setText("");
        jtxtYear.setText("");
        jtxtCourse.setText("");
        jtxtEmail.setText("");
        jtxtUser.setText("");
        jtxtPass.setText("");
    }
} catch (ClassNotFoundException ex) {
    // Handling ClassNotFoundException by logging the error
    java.util.logging.Logger.getLogger(ShowStudents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
} catch (SQLException ex) {
    // Handling SQLException by printing the error
    System.err.println(ex);
}

    }                                         

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ShowStudents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ShowStudents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ShowStudents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ShowStudents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ShowStudents().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jtxtCell;
    private javax.swing.JTextField jtxtCourse;
    private javax.swing.JTextField jtxtEmail;
    private javax.swing.JTextField jtxtGender;
    private javax.swing.JTextField jtxtID;
    private javax.swing.JTextField jtxtName;
    private javax.swing.JTextField jtxtPass;
    private javax.swing.JTextField jtxtStuID;
    private javax.swing.JTextField jtxtSurname;
    private javax.swing.JTextField jtxtUser;
    private javax.swing.JTextField jtxtYear;
    // End of variables declaration                   
}
